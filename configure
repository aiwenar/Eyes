#!/bin/bash

GXX="no"
LCONF="no"
QMAKE="no"
MAKE="no"
QTCORE="no"
QTGUI="no"
GTOP="no"
ARCH=""
LIBDIR=""

INCLUDES="\\ \n \t glib-2.0 \\ \n \t libgtop-2.0 \n"
LIBS="\\ \n \t glib-2.0 \\ \n \t gtop-2.0 \n"
SOURCES="eyes_ui.cpp eyes_view.cpp eyes_clapper.cc animation.cc eyes_looker.cc eyes_cfg.cc eyes_window.cc eyes_config.cc
econfig.cc core.cpp configurator.cc"
HEADERS="eyes_view.h bulwers.h eyes_info.h defines.hxx clap_animations.hxx animation.hxx eyes_cfg.hxx eyes_window.hxx
eyes_config.hxx econfig.hxx debug.hxx eyes.hxx core.hxx configurator.hxx"
OTHER="README.markdown config.cfg color.cfg configure"

_find_lib ()
{
  echo -n "checking for lib$1... "
  LIB=`find $3 -name lib$1.so`
  if [ "$LIB" == "" ] ; then
    echo "no"
    return 1
  else
    echo $LIB
    export $2=$LIB
    return 0
  fi
}

find_lib ()
{
  _find_lib $1 $2 "/usr/$LIBDIR /usr/local/$LIBDIR"
}

find_lib_on_path ()
{
  _find_lib $1 $2 $3
}

find_tool ()
{
  echo -n "checking for $1... "
  TOOL=`find /usr/bin -name $1`
  if [ "$TOOL" == "" ] ; then
    echo "no"
    return 1
  else
    echo $TOOL
    export $2=$TOOL
    return 0
  fi
}

write_config ()
{
  echo -n -e "" > eyes.pro
  echo -n -e "DEPENDENCY_LIBRARIES += " >> eyes.pro
  echo -n -e $LIBS >> eyes.pro
  echo -n -e "DEPENDENCY_INCLUDES += " >> eyes.pro
  echo -n -e $INCLUDES >> eyes.pro
  echo -n -e "SOURCES += " >> eyes.pro
  for I in $SOURCES ; do
    echo -n -e "\\ \n \t$I" >> eyes.pro
  done
  echo "" >> eyes.pro
  echo -n -e "HEADERS += " >> eyes.pro
  for I in $HEADERS ; do
    echo -n -e "\\ \n \t$I" >> eyes.pro
  done
  echo "" >> eyes.pro
  echo -n -e "OTHER_FILES += " >> eyes.pro
  for I in $OTHER ; do
    echo -n -e "\\ \n \t$I" >> eyes.pro
  done
  echo "" >> eyes.pro
  echo -e "INCLUDEPATH += /usr/include/glib-2.0 \\" >> eyes.pro
  echo -e "\t /usr/$LIBDIR/glib-2.0/include \\" >> eyes.pro
  echo -e "\t /usr/include/libgtop-2.0 \\" >> eyes.pro
  echo -e "\t /usr/$LIBDIR/libgtop-2.0/include \\" >> eyes.pro
  echo -e "\t /usr/local/include" >> eyes.pro
  echo -e "LIBS += /usr/$LIBDIR/libgtop-2.0.so \\" >> eyes.pro
  echo -e "\t $LCONF" >> eyes.pro
  echo "" >> eyes.pro
}

echo -n "checking system architecture... "
ARCH=`uname -m`
case "$ARCH" in
  i686)
    echo "x32"
    ARCH="x32"
    LIBDIR="lib/"
    ;;
  *)
    echo "unknown, using 32bit libraries"
    LIBDIR="lib/"
esac


find_tool "g++" "GXX"
find_tool "qmake" "QMAKE"
find_tool "make" "MAKE"

find_lib "config++" "LCONF"
find_lib "gtop-2.0" "GTOP"
find_lib_on_path "QtCore" "QTCORE" "/usr/$LIBDIR/qt4/"
find_lib_on_path "QtGui" "QTGUI" "/usr/$LIBDIR/qt4/"

INCOMPLETE=false
WHATMISSING=""

if [ $GXX == "no" ] ; then
  INCOMPLETE=true
  WHATMISSING="$WHATMISSING g++"
fi
if [ $QMAKE == "no" ] ; then
  INCOMPLETE=true
  WHATMISSING="$WHATMISSING qmake"
fi
if [ $MAKE == "no" ] ; then
  INCOMPLETE=true
  WHATMISSING="$WHATMISSING make"
fi
if [ $LCONF == "no" ] ; then
  INCOMPLETE=true
  WHATMISSING="$WHATMISSING libconfig++"
fi
if [ $QTCORE == "no" ] ; then
  INCOMPLETE=true
  WHATMISSING="$WHATMISSING libQtCore"
fi
if [ $QTGUI == "no" ] ; then
  INCOMPLETE=true
  WHATMISSING="$WHATMISSING libQtGui"
fi
if [ $GTOP == "no" ] ; then
  INCOMPLETE=true
  WHATMISSING="$WHATMISSING libgtop-2.0"
fi

echo ; echo
if [ $INCOMPLETE == true ] ; then
  echo "configuration incoplete!"
  echo "missing $WHATMISSING"
  exit 1
else
  write_config
  echo "configuration complete and written to eyes.pro"
  echo "to build Eyes type"
  echo "qmake ; make"
fi